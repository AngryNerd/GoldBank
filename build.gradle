// Apply Gradle plugins
plugins {
	id 'java'
	id 'eclipse'
	id 'idea'

    id 'com.github.hierynomus.license' version '0.11.0'
}

defaultTasks 'clean', 'licenseFormat', 'build'

// Project information
group = 'net.amigocraft.goldbank'
version = '4.0.0-SNAPSHOT'

// Extended project information
ext.projectName = 'goldbank'
ext.description = 'A gold-based economy plugin for Minecraft servers.'
ext.inceptionYear = '2012'
ext.packaging = 'jar'
ext.versionSuffix = version.contains('SNAPSHOT') && System.getenv("BUILD_NUMBER") ? '-jnks' + System.getenv("BUILD_NUMBER") : ''

sourceCompatibility = 1.6
targetCompatibility = 1.6

ext {
    bukkit = 'org.bukkit:bukkit:1.8-R0.1-SNAPSHOT'
	//TODO: phase this out unless it ports to Sponge
	vault = 'net.milkbowl.vault:VaultAPI:1.4'
}

// Project repositories
repositories {
	mavenCentral()
	//TODO: Remove this when Sponge fixes their dependencies
	maven { url 'https://oss.sonatype.org/content/groups/public' }
	maven { url 'http://hub.spigotmc.org/nexus/content/groups/public/' }
	maven { url 'http://repo.amigocraft.net/content/groups/public/' }
	maven { url 'http://nexus.theyeticave.net/content/repositories/pub_releases' }
}

// Project dependencies
dependencies {
	compile project('SpongeAPI') // TODO: Change to Sponge's Maven repo in the future
    compile bukkit
	compile vault

	testCompile 'junit:junit:4.11'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
	testCompile 'org.mockito:mockito-core:1.10.8'
}

// Read source files using UTF-8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

processResources {
  filter { String line -> line.replace('%VERSION%', versionSuffix) }
}

// License header formatting
license {
	header file('LICENSE')
	exclude '*.txt'
	sourceSets = project.sourceSets
	ignoreFailures false
	strictCheck true
	mapping {
		java = 'SLASHSTAR_STYLE'
	}
}

// Disable tests for SpongeAPI
project('SpongeAPI') {
	afterEvaluate { project ->
		javadoc.enabled = false
		javadocJar.enabled = false
		sourceJar.enabled = false
		licenseFormat.enabled = false
		tasks.withType(VerificationTask) {
			enabled = false
		}
	}
}
